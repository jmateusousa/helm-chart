# Default values for shipa.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

auth:
  adminUser: admin@shipa.io

shipaApi:
  port: 8080
  image: shipasoftware/api:helm-latest
  pullPolicy: Always

service:
  traefik:
    httpPort: 80
    httpsPort: 443
    enable: true
#    serviceType: ClusterIP
    serviceType: LoadBalancer
#    clusterIP: 10.100.10.11
#    loadBalancerIP: 104.154.157.13
  nginx:
    enabled: true
    serviceType: LoadBalancer
#    serviceType: ClusterIP
    #clusterIP: 10.100.10.10
#    loadBalancerIP: 35.202.88.71

dashboard:
  enabled: true
  image: shipasoftware/dashboard:latest

etcd:
  persistence:
    enabled: false
    accessMode: 'ReadWriteOnce'
    size: 10Gi

postgres:
  persistence:
    enabled: false
    accessMode: 'ReadWriteOnce'
    size: 10Gi

guardian:
  sshPort: 22
  image: shipasoftware/guardian:helm-chart
  pullPolicy: Always
  persistence:
    enabled: false
    accessMode: 'ReadWriteOnce'
    size: 10Gi

cli:
  image: shipasoftware/cli:helm-chart
  pullPolicy: Always

metrics:
  image: shipasoftware/metrics:v0.0.1
  pullPolicy: Always
  #password: hardcoded

platforms:
  - python

# --------------------------------------------------------------------------

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

rbac:
  enabled: true


mongodb-replicaset:
  replicaSetName: rs0
  replicas: 1
  port: 27017
  auth:
    enabled: false
  installImage:
    name: k8s.gcr.io/mongodb-install
    tag: 0.6
    pullPolicy: IfNotPresent
  image:
    name: mongo
    tag: latest
    pullPolicy: IfNotPresent
  persistentVolume:
    enabled: false
  tls:
    enabled: false
  configmap:


docker-registry:
  service:
    port: 5000
  tlsSecretName: shipa-certificates
  configData:
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
    http:
      # Don't change 5000 here
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    auth:
      token:
        # We inject realm as env variable
        service: shipa-registry
        issuer: shipa-token-issuer
        rootcertbundle: /etc/ssl/docker/ca.pem
