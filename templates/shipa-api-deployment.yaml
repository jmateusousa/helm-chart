apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "shipa.fullname" . }}-api
  labels: {{- include "shipa.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "shipa.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "shipa.selectorLabels" . | nindent 8 }}
      annotations:
        timestamp: "{{ date "20060102150405" .Release.Time }}"
    spec:
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ template "shipa.fullname" . }}
      {{- else }}
      serviceAccountName: default
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: bootstrap
          image: {{ .Values.cli.image }}
          command:
            - /scripts/bootstrap.sh
          imagePullPolicy: {{ .Values.cli.pullPolicy }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: shipa-conf
              mountPath: /etc/shipa-default/
            - name: config-dir
              mountPath: /etc/shipa/
          env:
            - name: NGINX_SERVICE
              value: {{ template "shipa.fullname" . }}-ingress-nginx
            - name: ETCD_SERVICE
              value: {{ template "shipa.fullname" . }}-etcd
            - name: REGISTRY_SERVICE
              value: {{ .Release.Name }}-docker-registry
            - name: NGINX_SERVICE_TYPE
              value: {{ .Values.service.nginx.serviceType }}
            - name: SHIPA_PORT
              value: {{ .Values.shipaApi.port | quote }}
        - name: init
          image: {{ .Values.shipaApi.image }}
          command:
            - /scripts/create-root-user.sh
          imagePullPolicy: {{ .Values.shipaApi.pullPolicy }}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: config-dir
              mountPath: /etc/shipa/
            - name: certificates
              mountPath: /certs/
          env:
          - name: USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ template "shipa.fullname" . }}-api-init-secret
                key: username
          - name: PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "shipa.fullname" . }}-api-init-secret
                key: password
          - name: NGINX_SERVICE
            value: {{ template "shipa.fullname" . }}-ingress-nginx
          - name: GUARDIAN_SERVICE
            value: {{ template "shipa.fullname" . }}-guardian
          - name: NGINX_SERVICE_TYPE
            value: {{ .Values.service.nginx.serviceType }}
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      containers:
        - name: shipa
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.shipaApi.image }}
          imagePullPolicy: {{ .Values.shipaApi.pullPolicy }}
          env:
            - name: METRICS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "shipa.fullname" . }}-secret
                  key: metrics-password
            - name: DOCKER_REGISTRY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "shipa.fullname" . }}-secret
                  key: docker-registry-password
            - name: ETCD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "shipa.fullname" . }}-secret
                  key: etcd-password
            - name: NODE_TRAEFIK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "shipa.fullname" . }}-secret
                  key: node-traefik-password
          ports:
            - name: shipa
              containerPort: {{ .Values.shipaApi.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.shipaApi.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.shipaApi.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-dir
              mountPath: /etc/shipa/
            - name: certificates
              mountPath: /certs/
      volumes:
        - name: config-dir
          emptyDir: {}
        - name: shipa-conf
          configMap:
            name: {{ template "shipa.fullname" . }}-api-config
            items:
              - key: shipa.conf
                path: shipa.conf

        - name: certificates
          secret:
            secretName: shipa-certificates
        - name: scripts
          configMap:
            defaultMode: 0755
            name: {{ template "shipa.fullname" . }}-api-init-config
