apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "shipa.fullname" . }}-api-config
  labels: {{- include "shipa.labels" . | nindent 4 }}
data:
  shipa.conf: |-
    tls-listen: "0.0.0.0:{{ .Values.shipaApi.securePort }}"
    listen: "0.0.0.0:{{ .Values.shipaApi.port }}"
    host: https://SHIPA_PUBLIC_IP:{{ .Values.shipaApi.securePort }}
    use-tls: true
    tls:
      server-cert: /certs/api-server.crt
      server-key: /certs/api-server.key

    repo-manager: guardian
    database:
      url: {{ .Release.Name }}-mongodb-replicaset:27017
      name: shipa
    license: {{ .Values.license }}
    organization:
      id: SHIPA_ORGANIZATION_ID
    auth:
      admin-email: {{ .Values.auth.adminUser | quote }}
      dummy-domain: {{ .Values.auth.dummyDomain | quote }}
      token-expire-days: 2
      hash-cost: 4
      user-registration: true
    provisioner: kubernetes
    platforms:
      build-pool: shipa-pool
      platformImageTag: {{ .Values.platforms.platformImageTag }}
    metrics:
      host: {{ template "shipa.fullname" . }}-metrics
      password: $METRICS_PASSWORD

      # section contains configuration of Prometheus Metrics Exporter
      prometheus-metrics-exporter:
        image: shipasoftware/prometheus-metrics-exporter:v0.0.2

    docker:
      bb:
        image: {{ .Values.busybody.image }}
        socket: /var/run/docker.sock
      cluster:
        storage: mongodb
        mongo-url: {{ .Release.Name }}-mongodb-replicaset:27017
        mongo-database: cluster
      collection: docker
      registry: SHIPA_PUBLIC_IP:{{ ( index .Values "docker-registry" ).service.port }}
      registry-scheme: https
      registry-auth:
        username: admin
        password: $DOCKER_REGISTRY_PASSWORD
      registry-token-signer:
        key-file: /certs/ca-key.pem
        cert-file: /certs/ca.pem
      repository-namespace: shipa
      router: traefik
      deploy-cmd: /var/lib/shipa/deploy
      run-cmd:
        bin: /var/lib/shipa/start
        port: "8888"
      tls:
        root-path: /certs
      auto-scale:
        enabled: true
        run-interval: $DOCKER_AUTOSCALE_RUN_INTERVAL
    routers:
      traefik:
        type: traefik
        domain: shipa.cloud
        kv:
          endpoint: {{ template "shipa.fullname" . }}-etcd:2379
          username: root
          password: $ETCD_PASSWORD
          ca: /certs/ca.pem
          client-key: /certs/etcd-client.key
          client-cert: /certs/etcd-client.crt
      istio:
        type: istio
    queue:
      mongo-url: {{ .Release.Name }}-mongodb-replicaset:27017
      mongo-database: queuedb
    quota:
      units-per-app: 4
      apps-per-user: 8
    log:
      disable-syslog: true
      use-stderr: true
    git:
      api-server: http://{{ template "shipa.fullname" . }}-guardian:8000
    clair:
      server: http://{{ template "shipa.fullname" . }}-clair:6060
      disabled: false
    kubernetes:
      core-services-address: SHIPA_PUBLIC_IP
      use-pool-namespaces: true
      remote-cluster-ingress:
        http-port: 80
        https-port: 443
        protected-port: 31567
        service-type: LoadBalancer

      deploy-sidecar-image: shipasoftware/deploy-agent:v0.6.2
      deploy-inspect-image: shipasoftware/deploy-agent:v0.6.2
    debug: {{ .Values.shipaApi.debug }}
    node-traefik:
      image: {{ .Values.shipaNodeTraefik.image }}
      user: {{ .Values.shipaNodeTraefik.user }}
      password: $NODE_TRAEFIK_PASSWORD
    certificates:
      root: /certs/
      ca: ca.pem
      ca-key: ca-key.pem
      client-ca: client-ca.crt
      client-ca-key: client-ca.key

    signatures: single # multiple/single
